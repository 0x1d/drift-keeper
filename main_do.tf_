terraform {
  required_providers {
    digitalocean = {
      source  = "digitalocean/digitalocean"
      version = "~> 2.0"
    }
  }
}

variable "do_token" {}
variable "config" {}

provider "digitalocean" {
  token = var.do_token
}

locals {
  bot_config = {
    wallet_address     = var.config.wallet_address
    rpc_endpoint       = var.config.rpc_endpoint
    ws_endpoint        = var.config.ws_endpoint
    keeper_private_key = var.config.keeper_private_key
    jito_private_key   = var.config.jito_private_key
    grafana_password   = var.config.grafana_password
  }
}

resource "digitalocean_ssh_key" "default" {
  name       = "Keeper Key"
  public_key = file("~/.ssh/id_rsa.pub")
}

resource "digitalocean_droplet" "keeper_ams" {
  image    = "ubuntu-23-10-x64"
  name     = "drift-keeper-ams"
  region   = "ams3"
  size     = "s-1vcpu-1gb"
  ssh_keys = [digitalocean_ssh_key.default.fingerprint]
  user_data = templatefile("cloud-config.yaml", {
    ntp_server = "ntp.amsterdam.jito.wtf"
    env_file = base64encode(templatefile("env.tpl", merge(local.bot_config, {
      jito_block_engine_url = "amsterdam.mainnet.block-engine.jito.wtf"
    })))
    config_file = base64encode(file("config.yaml"))
  })
}
resource "digitalocean_droplet" "keeper_nyc" {
  image    = "ubuntu-23-10-x64"
  name     = "drift-keeper-nyc"
  region   = "nyc1"
  size     = "s-1vcpu-1gb"
  ssh_keys = [digitalocean_ssh_key.default.fingerprint]
  user_data = templatefile("cloud-config.yaml", {
    ntp_server = "ntp.dallas.jito.wtf"
    env_file = base64encode(templatefile("env.tpl", merge(local.bot_config, {
      jito_block_engine_url = "ny.mainnet.block-engine.jito.wtf"
    })))
    config_file = base64encode(file("config.yaml"))
  })
}

output "droplets" {
  value = {
    ams = digitalocean_droplet.keeper_ams.ipv4_address
    nyc = digitalocean_droplet.keeper_nyc.ipv4_address
  }
}
